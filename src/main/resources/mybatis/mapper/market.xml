<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="market">

<select id ="selectList" parameterType="map" resultType="map">
			SELECT     p.product_id, product_name, price, size, quality,
          			   deal_means, safe_deal, seller_uid, update_date,
           		       selling_status, i.img_url, c.category_name, m.user_name, m.user_rank
      		 FROM      tbl_product p 
  LEFT OUTER JOIN      (SELECT product_id, img_url FROM tbl_product_img WHERE img_main = 1) i
        	   ON      i.product_id = p.product_id, tbl_category c, tbl_member m
            WHERE      p.category_id = c.category_id
		      AND      p.seller_uid = m.uid
		      		   <if test="brandId != null and brandId !='brand-all'">
				       		AND	p.brand_id =#{brandId}
				       </if>
				       <if test="searchValue != null and searchValue != ''">
				       		AND p.product_name LIKE CONCAT('%', #{searchValue}, '%')
				       </if>
				       <if test="seriesId != null and seriesId != 'series-all'">
				       		AND p.series_id = #{seriesId} 
				       </if>
				       <if test="categoryId != null and categoryId != 'category-all'">
				       		AND p.category_id = #{categoryId} 
				       </if>
					   <if test="sizeId != null and sizeId != 'size-all'">
				       		AND p.size = #{sizeId} 
				       </if>
				       <if test="qualityId != null and qualityId != 'quality-all'">
				       		AND p.quality = #{qualityId} 
				       </if>     
         ORDER BY 
					   <choose>
							<when test="priceFilter == 'ASC'">
								p.price ASC,
							</when>
							<when test="priceFilter == 'DESC'">
								p.price DESC,
							</when>
					   </choose>
				update_date DESC
		LIMIT  #{firstIndex}, #{rowsPerPage}
</select>

<select id ="selectCount" parameterType="map" resultType="int">
			SELECT     COUNT(product_id) AS list_count
      		 FROM      tbl_product
      	    WHERE	   product_id != "0"
      	    		   <if test="brandId != null and brandId !='brand-all'">
				       		AND	brand_id =#{brandId}
				       </if>
				       <if test="searchValue != null and searchValue != ''">
				       		AND product_name LIKE CONCAT('%', #{searchValue}, '%')
				       </if>
				       <if test="seriesId != null and seriesId != 'series-all'">
				       		AND series_id = #{seriesId} 
				       </if>
				       <if test="categoryId != null and categoryId != 'category-all'">
				       		AND category_id = #{categoryId} 
				       </if>
					   <if test="sizeId != null and sizeId != 'size-all'">
				       		AND size = #{sizeId} 
				       </if>
				       <if test="qualityId != null and qualityId != 'quality-all'">
				       		AND quality = #{qualityId} 
				       </if>
</select>

<select id ="selectProduct" parameterType="string" resultType="map">
			SELECT     p.product_id, product_name, price, 
					   size, quality, deal_means, safe_deal, 
					   seller_uid, update_date, selling_status, 
					   description, direct_place, delivery_check,
           		       p.brand_id, b.brand_name, p.category_id, 
           		       c.category_name, p.series_id, s.series_name, 
           		       m.user_name, md.phone_num
      		 FROM      tbl_product p , tbl_category c, tbl_member m, 
      		 		   tbl_member_detail md, tbl_brand b, tbl_series s
            WHERE      p.category_id = c.category_id
		      AND      p.seller_uid = m.uid
		      AND	   P.seller_uid = md.uid
		      AND	   p.brand_id = b.brand_id
		      AND	   p.series_id = s.series_id
			  AND	   p.product_id = #{productId}
</select>

<select id ="selectSellingCount" parameterType="map" resultType="int">
			SELECT     COUNT(product_id)
      		 FROM      tbl_product 
            WHERE      seller_uid = #{uid}
            <if test="searchValue != null or searchValue != ''">
              AND	   product_name LIKE CONCAT('%', #{searchValue}, '%')
            </if>
</select>

<select id ="selectSellingList" parameterType="map" resultType="map">
		    SELECT   merg.product_id, merg.product_name, merg.price, merg.size, merg.quality,
				     merg.deal_means, merg.safe_deal, merg.seller_uid, merg.update_date,
					 merg.selling_status, merg.img_url, merg.category_name, merg.user_name, 
					 merg.user_rank, merg.purchaser_uid, merg.purchaser_name, merg.purchaser_rank, merg.like_count, 
					 merg.complain_count, merg.comment_count, hit.hits_count
			FROM	 (		  SELECT     merg.product_id, merg.product_name, merg.price, merg.size, merg.quality,
										 merg.deal_means, merg.safe_deal, merg.seller_uid, merg.update_date,
										 merg.selling_status, merg.img_url, merg.category_name, merg.user_name, 
										 merg.user_rank, merg.purchaser_uid, merg.purchaser_name, merg.purchaser_rank, merg.like_count, 
										 merg.complain_count, comm.comment_count
								FROM	 (SELECT   merg.product_id, merg.product_name, merg.price, merg.size, merg.quality,
												   merg.deal_means, merg.safe_deal, merg.seller_uid, merg.update_date,
												   merg.selling_status, merg.img_url, merg.category_name, merg.user_name, 
												   merg.user_rank,merg.purchaser_uid, merg.purchaser_name, merg.purchaser_rank, merg.like_count, comp.complain_count
										  FROM     (			SELECT     merg.product_id, merg.product_name, merg.price, merg.size, merg.quality,
																		   merg.deal_means, merg.safe_deal, merg.seller_uid, merg.update_date,
																		   merg.selling_status, merg.img_url, merg.category_name, merg.user_name, 
																		   merg.user_rank, merg.purchaser_uid, merg.purchaser_name, merg.purchaser_rank, lik.like_count
																 FROM    
																		  (SELECT 				   merg.product_id, merg.product_name, merg.price, merg.size, merg.quality,
																								   merg.deal_means, merg.safe_deal, merg.seller_uid, merg.update_date,
																								   merg.selling_status, merg.img_url, merg.category_name, merg.user_name, 
																								   merg.user_rank, merg0.purchaser_uid, merg0.purchaser_name, merg0.purchaser_rank
																			FROM
																			
																			
																			(			SELECT     p.product_id, product_name, price, size, quality,
																								   deal_means, safe_deal, seller_uid, update_date,
																								   selling_status, i.img_url, c.category_name, m.user_name, 
																								   m.user_rank
																						 FROM      tbl_product p 
																			  LEFT OUTER JOIN      (SELECT product_id, img_url FROM tbl_product_img WHERE img_main = 1) i
																						   ON      i.product_id = p.product_id, tbl_category c, tbl_member m
																						WHERE      p.seller_uid = #{uid}
																						  AND      p.seller_uid = m.uid
																						  AND      p.category_id = c.category_id
																			              <if test="searchValue != null or searchValue != ''">
																						  AND	   product_name LIKE CONCAT('%', #{searchValue}, '%')
																						  </if>
																			              ) merg
																			  LEFT OUTER JOIN	   (SELECT deal.product_id, deal.purchaser_uid, 
																			  							   m.user_name purchaser_name, m.user_rank purchaser_rank 
																									  FROM tbl_deal deal, tbl_member m 
																									 WHERE deal.purchaser_uid = m.uid
																			                        ) merg0
																						   ON      merg0.product_id = merg.product_id) merg
													  LEFT OUTER JOIN      (select product_id, COUNT(product_id) like_count from tbl_like GROUP BY product_id) lik
																   ON      merg.product_id = lik.product_id) merg 
													LEFT OUTER JOIN       (select product_id, COUNT(product_id) complain_count from tbl_complain GROUP BY product_id) comp 
																 ON		  merg.product_id = comp.product_id) merg
					 LEFT OUTER JOIN     (select product_id, COUNT(product_id) comment_count from tbl_comment GROUP BY product_id) comm
								  ON     merg.product_id = comm.product_id) merg
 LEFT OUTER JOIN     (select product_id, hits hits_count from tbl_hits) hit
			  ON     merg.product_id = hit.product_id
		ORDER BY     merg.selling_status DESC, merg.update_date DESC
		LIMIT  #{firstIndex}, #{rowsPerPage}
</select>

<insert id="insert" parameterType="map"> 
	INSERT INTO tbl_product 
				(product_id, product_name, category_id,
				 brand_id, seller_uid, price 
				 <if test="sizeId != null and sizeId != 'undefined'">
       		 		,size
        	 	 </if>
				 ,quality,
				  deal_means, safe_deal, update_date,
				  description, selling_status 
				  <if test="seriesId != null and seriesId != 'undefined'">
       		 		,series_id
        	 	 </if>
        	 	 <if test="directPlace != null">
       		 		,direct_place
        	 	 </if>
        	 	 <if test="deliveryCheck!= null">
       		 		,delivery_check
        	 	 </if>
				  ) 
		 VALUES (#{productId}, #{productName}, #{categoryId},
		 		 #{brandId}, #{loginId}, #{price}
		 		 <if test="sizeId != null and sizeId != 'undefined'">
       		 		,#{sizeId}
        	 	 </if>
		 		 ,#{quality}, #{dealMeans}, #{safeDeal}, 
		 		 DATE_FORMAT(NOW(),"%Y%m%d%H%i%s"), #{detail}, #{status} 
		 		 <if test="seriesId != null and seriesId != 'undefined'">
       		 		,#{seriesId}
        	 	 </if>
        	 	 <if test="directPlace != null">
       		 		,#{directPlace}
        	 	 </if>
        	 	 <if test="deliveryCheck != null">
       		 		,#{deliveryCheck}
        	 	 </if>
        	 	 )
</insert>

<update id="updateStatus" parameterType="map">
	UPDATE tbl_product
	   SET selling_status = #{statusSelect}
	 WHERE product_id = #{productId}
</update>

<update id="update" parameterType="map"> 
	UPDATE 		tbl_product 
	   SET  	product_name = #{productName}, category_id =#{categoryId},
				 brand_id = #{brandId}, price = #{price}
				 <if test="sizeId != null and sizeId != 'undefined'">
       		 		,size = #{sizeId}
        	 	 </if>
				 ,quality = #{quality},
				  deal_means = #{dealMeans}, safe_deal = #{safeDeal},
				  update_date = DATE_FORMAT(NOW(),"%Y%m%d%H%i%s"),
				  description = #{detail}, selling_status = #{status}
				  <if test="seriesId != null and seriesId != 'undefined'">
       		 		,series_id = #{seriesId}
        	 	 </if>
        	 	 <if test="directPlace != null">
       		 		,direct_place = #{directPlace}
        	 	 </if>
        	 	 <if test="deliveryCheck!= null">
       		 		,delivery_check = #{deliveryCheck}
        	 	 </if>
	WHERE        product_id =#{productId}
</update>
	<delete id="deleteProduct" parameterType="string">
			DELETE FROM tbl_product
			  	  WHERE product_id =#{productId}
	</delete>

</mapper>